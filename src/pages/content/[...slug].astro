---
import { getCollection } from 'astro:content';
import MainLayout from "@/layouts/MainLayout.astro";
import { Image } from 'astro:assets';

// Generate static paths for all content items
export async function getStaticPaths() {
  const contentEntries = await getCollection('content');
  return contentEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the content entry based on slug
const { entry } = Astro.props;
const { title, desc, img, alt, publishedTime, modifiedTime } = entry.data;

// Format dates for display
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// Render content
const { Content } = await entry.render();
---

<MainLayout title={title} description={desc}>
  <div class="content-page">
    <!-- Back Button -->
    <div class="max-w-4xl mx-auto px-4 pt-6">
      <a href="/" class="inline-flex items-center text-blue-600 hover:text-blue-800 transition-colors mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Back to Photography Collection
      </a>
    </div>

    <!-- Hero Section -->
    <div class="relative w-full mb-8">
      <div class="w-full">
        <Image 
          src={img} 
          alt={alt} 
          width={1200} 
          height={600} 
          class="w-full h-[40vh] md:h-[50vh] object-cover rounded-lg shadow-lg" 
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent flex flex-col justify-end p-6 rounded-lg">
          <div class="max-w-4xl mx-auto w-full">
            <h1 class="text-3xl md:text-4xl font-bold text-white mb-3">{title}</h1>
            <div class="flex flex-wrap items-center text-gray-200 text-sm">
              <span class="flex items-center mr-4">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                {formatDate(publishedTime)}
              </span>
              {modifiedTime && (
                <span class="flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                  </svg>
                  Updated: {formatDate(modifiedTime)}
                </span>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <main class="max-w-4xl mx-auto px-4 pb-12">
      <div class="bg-white rounded-lg shadow-md p-6 md:p-8">
        <!-- Article Introduction -->
        <div class="mb-8 text-lg leading-relaxed text-gray-700 border-b pb-6">
          <p class="font-medium">{desc}</p>
        </div>
        
        <!-- Content from Markdown -->
        <article class="prose prose-lg max-w-none">
          <Content />
        </article>
      </div>

      <!-- Share Links -->
      <div class="mt-8 flex justify-center space-x-4">
        <button class="flex items-center gap-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z" />
          </svg>
          Share Article
        </button>
        <button class="flex items-center gap-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" />
          </svg>
          Save
        </button>
      </div>
    </main>
  </div>
</MainLayout>

<style>
  /* Content styling */
  .content-page {
    @apply bg-gray-50 min-h-screen;
  }

  /* Responsive image container */
  @media (max-width: 768px) {
    .hero-image-container {
      height: 40vh;
    }
  }

  /* Animation for page elements */
  .content-page main {
    animation: fadeIn 0.6s ease-in-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>

<script>
  // Add smooth scrolling for headings if needed
  document.querySelectorAll('article h2, article h3').forEach(heading => {
    heading.addEventListener('click', () => {
      heading.scrollIntoView({ behavior: 'smooth' });
    });
  });
</script>